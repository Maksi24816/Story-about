let LocationCell = [];
const XLocStart = 113,YLocStart = 86;

let TFWorldCell = false;

const CreateLocation = {
    Controler () {
        CreateLocation.Create();
        for (let x = 0; x < 4; x++) {
            CreateLocation.Smoothing();
            CreateLocation.Neighboring();
        }
        //LocationRendering.Cell()
    },

    Create () {
        for (let x = 0; x < 9; x++) {
            for (let y = 0; y < 9; y++) {
                Arr = [];
                for (let x1 = 0; x1 < 9; x1++) {
                    for (let y1 = 0; y1 < 9; y1++) {  
                        Arr[x1*9+y1] = CreateLocation.Transition(ArrLocation[XLocStart+x][YLocStart+x1],x,y,x1,y1);
                        //Arr[x1*9+y1][0][2] = 0;
                    }
                }
                LocationCell[x*9+y] = Arr
            }
        } 
    },

    Transition (AL,x,y,x1,y1){
        Res = LocCellTransition[AL[0][2]][y1][y];
        ctArr = AL.slice();

        Rand = Math.random();

        if(Res[0] >= Rand){
            if(ctArr[0][1][0] !== null){
                ctArr[0] = [ctArr[0][1][0],[ctArr[0][1][0],ctArr[0][1][0],ctArr[0][1][2]],0,ctArr[0][3]]
            }
        } else {
            ctArr[0] = [ctArr[0][0],[ctArr[0][1][0],ctArr[0][1][1],ctArr[0][1][2]],0,ctArr[0][3]];
        }
        return ctArr
    },

    Smoothing () {
        for(let x = 1 ; x < LocationCell.length-1; x++){
            for(let y = 1 ; y < LocationCell.length-1; y++){
                LocCell = LocationCell[x][y][0][0];
                CreateLocation.SmoothingCount(x,y,LocCell);
            }
        }
    },

    SmoothingCount (X,Y,Num) {
        gscNum = 0;
        You = null;

        for(let x = X-1 ; x < X+2; x++){
            for(let y = Y-1 ; y < Y+2; y++){
                if(LocationCell[x][y][0][0] === Num){gscNum++}
                else {You = LocationCell[x][y][0][0]}
            }
        }

        if(gscNum > 4){LocationCell[X][Y][0][0] = Num;}
        else{LocationCell[X][Y][0][0] = You;}
    },

    Neighboring () {
        for(let x = 0 ; x < LocationCell.length; x++){
            for(let y = 0 ; y < LocationCell.length; y++){
                CreateLocation.NeighboringCount(x,y);
            }
        }
    },

    NeighboringCount (X,Y) {
        if(X != 0 && X != WorldSize-1){
            if(Y != 0 && Y != WorldSize-1){
                neighboringCell = null;
                Arr21 = [];
                for(let x = -1 ; x < +2; x++){
                    Arr22 = [];
                    for(let y = -1 ; y < +2; y++){
                        TF = false;
        
                        CCView = ContactCView[LocationCell[X][Y][0][0]];
                        for(let p = 0; p < CCView.length; p++){
                            if(LocationCell[X+x][Y+y][0][0] === CCView[p][0]){TF = true; neighboringCell = p;}
                        }
                        if(TF == true){Arr22[y+1] = 1;TFWorldCell = true} else {Arr22[y+1] = 0;}
                    }
                    Arr21[x+1] = Arr22;
                }
                
                if(TFWorldCell == true){
                    CCV = ContactCView[LocationCell[X][Y][0][0]][neighboringCell];
                    LocationCell[X][Y] = CreateLocation.TransitionCView(Arr21,LocationCell[X][Y][0][0],[CCV[0],CCV[1],neighboringCell],LocationCell[X][Y][0][3])
                } else {CreateLocation.El_NoLogic(X,Y);}
        
                TFWorldCell = false;
            } else {CreateLocation.El_NoLogic(X,Y);}
        } else {CreateLocation.El_NoLogic(X,Y);}
    },

    El_NoLogic (X,Y) {
        CCV = ContactCView[LocationCell[X][Y][0][0]][0];
        LocationCell[X][Y][0] = [LocationCell[X][Y][0][0],[CCV[0],CCV[1],0],0,LocationCell[X][Y][0][3]];
        LocationCell[X][Y][1] = [[null,0,0],0];
    },

    TransitionCView (Arr,WorldCView,Neighboring,BioCell) {
        Go = [[WorldCView,Neighboring,0,BioCell],[[null,0,0],0]];
        UP = 0;
        
        if(Arr[0][1] == 1){if(Arr[2][1] == 1){Go[0][2] = 0;UP++}}
        if(Arr[2][1] == 1){if(Arr[0][1] == 1){Go[0][2] = 0;UP++}}
        if(Arr[1][0] == 1){if(Arr[1][2] == 1){Go[0][2] = 0;UP++}}
        if(Arr[1][2] == 1){if(Arr[1][0] == 1){Go[0][2] = 0;UP++}}

        if(UP == 0){
            if(Arr[0][1] == 1){if(Arr[1][2] == 1){Go[0][2] = 12;UP++}}
            if(Arr[1][2] == 1){if(Arr[2][1] == 1){Go[0][2] = 11;UP++}}
            if(Arr[2][1] == 1){if(Arr[1][0] == 1){Go[0][2] = 10;UP++}}
            if(Arr[1][0] == 1){if(Arr[0][1] == 1){Go[0][2] = 9;UP++}}
        }

        if(UP == 0){
            if(Arr[0][1]){Go[0][2] = 5;UP++}
            if(Arr[1][2]){Go[0][2] = 6;UP++}
            if(Arr[2][1]){Go[0][2] = 7;UP++}
            if(Arr[1][0]){Go[0][2] = 8;UP++}
        }
        
        if(UP == 0){
            if(Arr[0][2]){Go[0][2] = 4;UP++}
            if(Arr[2][2]){Go[0][2] = 3;UP++}
            if(Arr[2][0]){Go[0][2] = 2;UP++}
            if(Arr[0][0]){Go[0][2] = 1;UP++}
        }

        return Go;
    }
}

const LocCellTransition = [
    [
        [[0],[0],[.0],[.0],[.0],[.0],[.0],[.0],[.0]],
        [[.0],[.60],[.60],[.60],[.60],[.60],[.60],[.60],[.0]],
        [[.0],[.60],[.60],[.60],[.60],[.60],[.60],[.60],[.0]],
        [[.0],[.60],[.60],[.60],[.60],[.60],[.60],[.60],[.0]],
        [[.0],[.60],[.60],[.60],[.60],[.60],[.60],[.60],[.0]],
        [[.0],[.60],[.60],[.60],[.60],[.60],[.60],[.60],[.0]],
        [[.0],[.60],[.60],[.60],[.60],[.60],[.60],[.60],[.0]],
        [[.0],[.60],[.60],[.60],[.60],[.60],[.60],[.60],[.0]],
        [[.0],[.0],[.0],[.0],[.0],[.0],[.0],[.0],[.0]]
    ],
    [
        [[1],[1],[.5],[1],[1],[0],[0],[0],[0]],
        [[1],[.5],[.5],[.5],[.5],[.5],[.5],[.5],[0]],
        [[.5],[.5],[.5],[.5],[.5],[.5],[.5],[.5],[.5]],
        [[1],[.5],[.5],[.5],[.5],[.5],[.5],[0],[.5]],
        [[1],[1],[.5],[.5],[.5],[.5],[0],[0],[0]],
        [[0],[.5],[.5],[.5],[0],[0],[0],[0],[0]],
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]],
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]],
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]]
    ],
    [
        [[0],[0],[0],[0],[1],[1],[.5],[1],[1]],
        [[0],[0],[0],[.5],[.5],[.5],[.5],[.5],[1]],
        [[0],[0],[0],[.5],[.5],[.5],[.5],[.5],[.5]],
        [[0],[0],[0],[.5],[.5],[.5],[.5],[.5],[1]],
        [[0],[0],[0],[0],[.5],[.5],[.5],[.5],[1]],
        [[0],[0],[0],[0],[0],[.5],[.5],[.5],[0]],
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]],
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]],
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]]
    ],
    [
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]],
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]],
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]],
        [[0],[0],[0],[0],[0],[.5],[.5],[.5],[0]],
        [[0],[0],[0],[0],[.5],[.5],[.5],[.5],[1]],
        [[0],[0],[0],[.5],[.5],[.5],[.5],[.5],[1]],
        [[0],[0],[0],[.5],[.5],[.5],[.5],[.5],[.5]],
        [[0],[0],[0],[.5],[.5],[.5],[.5],[.5],[1]],
        [[0],[0],[0],[0],[1],[1],[.5],[1],[1]]
    ],
    [
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]],
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]],
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]],
        [[0],[.5],[.5],[.5],[0],[0],[0],[0],[0]],
        [[1],[.5],[.5],[.5],[.5],[0],[0],[0],[0]],
        [[1],[.5],[.5],[.5],[.5],[.5],[0],[0],[0]],
        [[.5],[.5],[.5],[.5],[.5],[.5],[0],[0],[0]],
        [[1],[.5],[.5],[.5],[.5],[.5],[0],[0],[0]],
        [[1],[1],[.5],[1],[1],[0],[0],[0],[0]]
    ],
    [
        [[1],[1],[1],[1],[1],[0],[0],[0],[0]],
        [[1],[1],[1],[1],[.5],[.5],[0],[0],[0]],
        [[1],[1],[1],[.5],[.5],[.5],[.5],[0],[0]],
        [[1],[1],[.5],[.5],[.5],[.5],[.5],[0],[0]],
        [[1],[1],[.5],[.5],[.5],[.5],[.5],[0],[0]],
        [[1],[1],[.5],[.5],[.5],[.5],[.5],[0],[0]],
        [[1],[1],[.5],[.5],[.5],[.5],[.5],[0],[0]],
        [[1],[1],[1],[.5],[.5],[.5],[0],[0],[0]],
        [[1],[1],[1],[1],[1],[0],[0],[0],[0]]
    ],
    [
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]],
        [[0],[0],[0],[.5],[.5],[.5],[.5],[0],[0]],
        [[0],[0],[.5],[.5],[.5],[.5],[.5],[.5],[0]],
        [[0],[.5],[.5],[.5],[.5],[.5],[.5],[.5],[0]],
        [[1],[.5],[.5],[.5],[.5],[.5],[.5],[.5],[1]],
        [[1],[1],[.5],[.5],[.5],[.5],[.5],[1],[1]],
        [[1],[1],[1],[.5],[.5],[.5],[1],[1],[1]],
        [[1],[1],[1],[1],[1],[1],[1],[1],[1]],
        [[1],[1],[1],[1],[1],[1],[1],[1],[1]]
    ],
    [
        [[0],[0],[0],[0],[1],[1],[1],[1],[1]],
        [[0],[0],[0],[.5],[.5],[1],[1],[1],[1]],
        [[0],[0],[.5],[.5],[.5],[.5],[1],[1],[1]],
        [[0],[0],[.5],[.5],[.5],[.5],[.5],[1],[1]],
        [[0],[0],[.5],[.5],[.5],[.5],[.5],[1],[1]],
        [[0],[0],[.5],[.5],[.5],[.5],[.5],[1],[1]],
        [[0],[0],[.5],[.5],[.5],[.5],[1],[1],[1]],
        [[0],[0],[0],[.5],[.5],[1],[1],[1],[1]],
        [[0],[0],[0],[0],[1],[1],[1],[1],[1]]
    ],
    [
        [[1],[1],[1],[1],[1],[1],[1],[1],[1]],
        [[1],[1],[1],[1],[1],[1],[1],[1],[1]],
        [[1],[1],[1],[.5],[.5],[.5],[1],[1],[1]],
        [[1],[1],[.5],[.5],[.5],[.5],[.5],[1],[1]],
        [[1],[.5],[.5],[.5],[.5],[.5],[.5],[.5],[1]],
        [[0],[.5],[.5],[.5],[.5],[.5],[.5],[.5],[0]],
        [[0],[0],[.5],[.5],[.5],[.5],[.5],[0],[0]],
        [[0],[0],[0],[.5],[.5],[.5],[0],[0],[0]],
        [[0],[0],[0],[0],[0],[0],[0],[0],[0]]
    ],
    [
        [[1],[1],[1],[1],[1],[1],[1],[1],[1]],
        [[1],[1],[1],[1],[1],[1],[1],[1],[1]],
        [[1],[1],[1],[1],[.5],[.5],[1],[1],[1]],
        [[1],[1],[1],[.5],[.5],[.5],[.5],[1],[1]],
        [[1],[1],[.5],[.5],[.5],[.5],[.5],[.5],[1]],
        [[1],[1],[.5],[.5],[.5],[.5],[.5],[.5],[0]],
        [[1],[1],[1],[.5],[.5],[.5],[.5],[0],[0]],
        [[1],[1],[1],[1],[.5],[.5],[0],[0],[0]],
        [[1],[1],[1],[1],[1],[0],[0],[0],[0]]
    ],
    [
        [[1],[1],[1],[1],[1],[1],[1],[1],[1]],
        [[1],[1],[1],[1],[1],[1],[1],[1],[1]],
        [[1],[1],[1],[.5],[.5],[1],[1],[1],[1]],
        [[1],[1],[.5],[.5],[.5],[.5],[1],[1],[1]],
        [[1],[.5],[.5],[.5],[.5],[.5],[.5],[1],[1]],
        [[0],[.5],[.5],[.5],[.5],[.5],[.5],[1],[1]],
        [[0],[0],[.5],[.5],[.5],[.5],[1],[1],[1]],
        [[0],[0],[.5],[0],[.5],[1],[1],[1],[1]],
        [[0],[0],[0],[0],[1],[1],[1],[1],[1]]
    ],
    [
        [[0],[0],[0],[0],[1],[1],[1],[1],[1]],
        [[0],[0],[0],[.5],[.5],[1],[1],[1],[1]],
        [[0],[0],[.5],[.5],[.5],[.5],[1],[1],[1]],
        [[0],[.5],[.5],[.5],[.5],[.5],[.5],[1],[1]],
        [[1],[.5],[.5],[.5],[.5],[.5],[1],[1],[1]],
        [[1],[1],[.5],[.5],[.5],[1],[1],[1],[1]],
        [[1],[1],[1],[.5],[1],[1],[1],[1],[1]],
        [[1],[1],[1],[1],[1],[1],[1],[1],[1]],
        [[1],[1],[1],[1],[1],[1],[1],[1],[1]]
    ],
    [
        [[1],[1],[1],[1],[1],[0],[0],[0],[0]],
        [[1],[1],[1],[1],[.5],[.5],[0],[0],[0]],
        [[1],[1],[1],[.5],[.5],[.5],[.5],[0],[0]],
        [[1],[1],[.5],[.5],[.5],[.5],[.5],[.5],[0]],
        [[1],[1],[.5],[.5],[.5],[.5],[.5],[.5],[1]],
        [[1],[1],[1],[.5],[.5],[.5],[.5],[1],[1]],
        [[1],[1],[1],[1],[.5],[.5],[1],[1],[1]],
        [[1],[1],[1],[1],[1],[1],[1],[1],[1]],
        [[1],[1],[1],[1],[1],[1],[1],[1],[1]]
    ]
]
